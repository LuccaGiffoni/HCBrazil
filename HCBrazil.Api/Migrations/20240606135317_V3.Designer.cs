// <auto-generated />
using System;
using HCBrazil.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HCBrazil.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240606135317_V3")]
    partial class V3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HCBrazil.Core.Models.Attendee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianCPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GuardianNumber")
                        .HasColumnType("int");

                    b.Property<string>("GuardianPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GuardianPostalCode")
                        .HasColumnType("int");

                    b.Property<string>("GuardianRG")
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianRegion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianState")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianStreet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instagram")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("RG")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Attendees");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.EventAttendees", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("char(36)")
                        .HasColumnOrder(1);

                    b.HasKey("EventId", "AttendeeId");

                    b.HasIndex("AttendeeId");

                    b.ToTable("EventAttendees");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.EventOrganizations", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnOrder(0);

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)")
                        .HasColumnOrder(1);

                    b.HasKey("EventId", "OrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("EventOrganizations");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.EventVolunteers", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnOrder(0);

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("char(36)")
                        .HasColumnOrder(1);

                    b.HasKey("EventId", "VolunteerId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("EventVolunteers");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("GuardianId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Instagram")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("RG")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.Attendee", b =>
                {
                    b.HasOne("HCBrazil.Core.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.EventAttendees", b =>
                {
                    b.HasOne("HCBrazil.Core.Models.Attendee", "Attendee")
                        .WithMany()
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HCBrazil.Core.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.EventOrganizations", b =>
                {
                    b.HasOne("HCBrazil.Core.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HCBrazil.Core.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("HCBrazil.Core.Models.EventVolunteers", b =>
                {
                    b.HasOne("HCBrazil.Core.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HCBrazil.Core.Models.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Volunteer");
                });
#pragma warning restore 612, 618
        }
    }
}
